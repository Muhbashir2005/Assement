using System;

namespace Chapter3
{
    class Program
    {
        static void Main(string[] args)
        {
            /*1. Write an expression that checks whether an integer is odd or even.*/
            int a = 5;
            int b = 6;
            Console.WriteLine(a % 2 == 0 ?"a is even": "a is odd");
            Console.WriteLine(b % 2 == 0 ?"b is even": "b is odd");
            /*2. Write a Boolean expression that checks whether a given integer is
            divisible by both 5 and 7, without a remainder.*/
            int int1 = 38;
            int int2 = 35;
            Console.WriteLine((int1 % 5 == 0) && (int1 % 7 == 0) ? "int1 is divisible by 5 and Seven":"int1 is not divisible by both 5 and 7" );
            Console.WriteLine((int2 % 5 == 0 ) && (int2 % 7 == 0) ? "int2 is divisible by 5 and Seven":"int2 is not divisible by both 5 and 7" );
            /*3. Write an expression that looks for a given integer if its third digit (right to left) is 7.*/
            long num = 234567889998;
            decimal divNum = (num / 100) % 10;
            Console.WriteLine(divNum == 7 ? "Third digit of number is equal to 7":" Number is not equal to 7");
            /*4. Write an expression that checks whether the third bit in a given integer is 1 or 0.*/
            int num1 = 25; 
            double thirdBit = (num1 & 8) != 0;
            /*5. Write an expression that calculates the area of a trapezoid by given sides a, b and height h.*/
            int a1 = 9;
            int b1 = 13;
            int h1 = 23;
            decimal areaOfTrap =  (a + b) * h1 / 2;
            Console.WriteLine(areaOfTrap);
            /*6. Write a program that prints on the console the perimeter and the area of a rectangle by given side and height entered by the user.*/
            Console.WriteLine("Enter Height :");
            int h = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter Width :");
            int w = Convert.ToInt32(Console.ReadLine());
            decimal areaOfRec = h * w;
            decimal perOfRec = (h + w )* 2;
            Console.WriteLine($"Area of the Rectangle is {areaOfRec} and Perimeter of Rectangle is {perOfRec}");
            /*7. The gravitational field of the Moon is approximately 17% of that on the Earth. Write a program that calculates the weight of a man on the moon by a given weight on the Earth.*/
             Console.Write("Enter the weight: ");
            double weight = Convert.ToDouble(Console.ReadLine());
            double percentage = 17d / 100;
            Console.WriteLine($"The weight of the man on the moon with {weight} on earth is: {weight * (percentage)}");
            /*8. Write an expression that checks for a given point {x, y} if it is within the circle K({0, 0}, R=5). Explanation: the point {0, 0} is the center of the circle and 5 is the radius.*/        
            int x = 5;
            int y = 6;
            Console.WriteLine((x*x)+(y*y)<= 25?"The point is inside the circle":"The point is outside the circle");
            /*9. Write an expression that checks for given point {x, y} if it is within the circle K({0, 0}, R=5) and out of the rectangle [{-1, 1}, {5, 5}]. Clarification: for the rectangle the lower left and the upper right corners are given.*/
            int x1 = 4;
            int y2 = 6;
            bool isOutRectangle = (x1 < -1 && x1 > 5 && y2 < 1 && y2 > 5) ? true : false;
            Console.WriteLine($"The point O({x1},{y2}) is outside rectangle ((-1, 1), (5, 5)?: {isOutRectangle}");

            /*10. Write a program that takes as input a four-digit number in format abcd (e.g. 2011) and performs the following actions:
            - Calculates the sum of the digits (in our example 2+0+1+1 = 4).
            - Prints on the console the number in reversed order: dcba (in our example 1102).
            - Puts the last digit in the first position: dabc (in our example 1201).
            - Exchanges the second and the third digits: acbd (in our example 2101).*/
            Console.Write("Enter a four digit number: ");
            string number = Console.ReadLine();
            int first = Convert.ToInt32(number[0].ToString());
            int second = Convert.ToInt32(number[1].ToString());
            int third = Convert.ToInt32(number[2].ToString());
            int fourth = Convert.ToInt32(number[3].ToString());
            Console.WriteLine($"Calculates the sum of the digits: {first + second + third + fourth}");
            Console.WriteLine($"Prints on the console the number in reversed order: {fourth}{third}{second}{first}");
            Console.WriteLine($"Puts the last digit in the first position: {fourth}{first}{second}{third}");
            Console.WriteLine($"Exchanges the second and the third digit: {first}{third}{second}{fourth}"); 
            /*11. We are given a number n and a position p. Write a sequence of operations that prints the value of the bit on the position p in the number (0 or 1). Example: n=35, p=5 -> 1. Another example: n=35, p=6 -> 0.*/
            int n = 35; 
            int pZero = 6;
            int i = 1; 
            int mask = i << pzero; 
            Console.WriteLine((n & mask) != 0 ? 1 : 0);
            /*12. Write a Boolean expression that checks if the bit on position p in the integer v has the value 1. Example v=5, p=1 -> false.*/
            int v = 220;
            int pOne = 234;
            int mask = 1 << p;
            bool is1 = (v & mask) != 0 ? true : false;
            Console.WriteLine($"The bit at position {p}of number {v} is 1? {is1}");

            /*13. We are given the number n, the value v (v = 0 or 1) and the position p. write a sequence of operations that changes the value of n, so the bit on the position p has the value of v. Example: n=35, p=5, v=0 -> n=3. Another example: n=35, p=2, v=1 -> n=39.*/
           int n1 = 350;
           int vOne = 0;
           int pOnes = 3;
           n = (vOne == 0) ? n1 = n1 & (~(1 << pOnes)) : n = n | (1 << pOnes);
           Console.WriteLine(n1);
            /*14. Write a program that checks if a given number n (1 < n < 100) is a prime number (i.e. it is divisible without remainder only to itself and 1).*/
            Console.WriteLine("Enter a number ");
            int numn = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine(numn % numn == 1 && numn % 1 == numn ?"Number is a prime number":"Number is not a prime");
            /*15. * Write a program that exchanges the values of the bits on positions 3, 4 and 5 with bits on positions 24, 25 and 26 of a given 32-bit unsigned integer.*/
            Console.Write("Enter number: ");
            int lV = Convert.ToInt32(Console.ReadLine());
            int Mask = 1 << 3;
            int bitAt3 = (lV & Mask) != 0 ? 1 : 0;
            Mask = 1 << 4;
            int bitAt4 = (lV & Mask) != 0 ? 1 : 0;
            Mask = 1 << 5;
            int bitAt5 = (lV & Mask) != 0 ? 1 : 0;
            Mask = 1 << 24;
            int bitAt24 = (lV & Mask) != 0 ? 1 : 0;
            Mask = 1 << 25;
            int bitAt25 = (lV & Mask) != 0 ? 1 : 0;
            Mask = 1 << 26;
            int bitAt26 = (lV & Mask) != 0 ? 1 : 0;
            lV = (bitAt3 == 0) ? lV = lV & (~(1 << 24)) : lV = lV| (1 << 24);
            lV = (bitAt4 == 0) ? lV = lV & (~(1 << 25)) : lV = lV | (1 << 25);
            lV = (bitAt5 == 0) ? lV = lV & (~(1 << 26)) : lV = lV | (1 << 26);
            lV = (bitAt24 == 0) ? lV = lV & (~(1 << 3)) : lV = lV | (1 << 3);
            lV = (bitAt25 == 0) ? lV = lV & (~(1 << 4)) : lV = lV | (1 << 4);
            lV = (bitAt26 == 0) ? lV = lV & (~(1 << 5)) : lV = lV | (1 << 5);
            Console.WriteLine(lV);
            /*16. * Write a program that exchanges bits {p, p+1, …, p+k-1} with bits {q, q+1, …, q+k-1} of a given 32-bit unsigned integer.*/ 
           
        }
    }
}
